# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger: none
pr: none

pool:
  vmImage: 'macos-latest'

variables:
  - group: wizardBlockVariables  

steps:
  - task: PowerShell@2
    displayName: 'Generate Changelog'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      targetType: 'inline'
      script: |
        $url = "{0}{1}/_apis/build/builds/$env:BUILD_BUILDID/changes?api-version=5.1" -f $env:SYSTEM_COLLECTIONURI, $env:SYSTEM_TEAMPROJECT
        
          $changelogPath = "$env:BUILD_ARTIFACTSTAGINGDIRECTORY/changelog"
        
          $changes = Invoke-RestMethod -Uri $url -Method Get -Headers @{
              Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
          }
        
          Write-Host "Pipeline = $($changes | ConvertTo-Json -Depth 100)"
        
          ## Generate Output
          "Last Commits:" | Add-Content -Path $changelogPath
          foreach($change in $changes.value) {
            "* $($change.message)" | Add-Content -Path $changelogPath
          }
  - task: DownloadSecureFile@1
    displayName: 'Download release_key.jks'
    name: keystore
    inputs:
      secureFile: 'release_key.jks'
  - task: CopyFiles@2
    displayName: 'Copy release_key.jks'
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: '$(keystore.secureFilePath)'
      TargetFolder: '$(System.DefaultWorkingDirectory)/signing'
      OverWrite: true
  - task: DownloadSecureFile@1
    displayName: 'Download local.properties'
    name: localProperties
    inputs:
      secureFile: 'local.properties'
  - task: CopyFiles@2
    displayName: 'Copy local.properties'
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: '$(localProperties.secureFilePath)'
      TargetFolder: '$(System.DefaultWorkingDirectory)'
      OverWrite: true
  - task: JavaToolInstaller@0
    displayName: 'Install Java 17'
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - task: Gradle@2
    displayName: 'AssembleDebug (APK)'
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleRelease'
  - task: CopyFiles@2
    displayName: 'Copy apk to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: app/build/outputs/apk/
      Contents: '**/*.apk'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: Gradle@2
    displayName: 'BundleRelease (AAB)'
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'bundleRelease'
  - task: CopyFiles@2
    displayName: 'Copy aab to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: app/build/outputs/bundle/
      Contents: '**/*.aab'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: buildRelease
#  - task: NodeTool@0
#    displayName: 'Install Node.js'
#    inputs:
#      versionSpec: '18.x'
#  - task: CmdLine@2
#    displayName: 'Install firebase cli'
#    inputs:
#      script: 'npm install -g firebase-tools'
#      workingDirectory: '$(Agent.ToolsDirectory)'
#  - task: CmdLine@2
#    inputs:
#      script: 'firebase appdistribution:distribute $(Build.ArtifactStagingDirectory)/*.aab --token $(firebase_token) --app $(firebase_app_id_release) --release-notes-file "$(Build.ArtifactStagingDirectory)/changelog" --groups "wizardblock-tester-release"'
